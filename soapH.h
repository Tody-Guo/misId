/* soapH.h
   Generated by gSOAP 2.8.9 from boardId.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#endif

#ifndef SOAP_TYPE___ns3__updateM2
#define SOAP_TYPE___ns3__updateM2 (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__updateM2(struct soap*, struct __ns3__updateM2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__updateM2(struct soap*, const struct __ns3__updateM2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__updateM2(struct soap*, const char*, int, const struct __ns3__updateM2 *, const char*);
SOAP_FMAC3 struct __ns3__updateM2 * SOAP_FMAC4 soap_in___ns3__updateM2(struct soap*, const char*, struct __ns3__updateM2 *, const char*);

#ifndef soap_write___ns3__updateM2
#define soap_write___ns3__updateM2(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__updateM2(soap, data), 0) || soap_put___ns3__updateM2(soap, data, "-ns3:updateM2", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__updateM2(struct soap*, const struct __ns3__updateM2 *, const char*, const char*);

#ifndef soap_read___ns3__updateM2
#define soap_read___ns3__updateM2(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__updateM2(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__updateM2 * SOAP_FMAC4 soap_get___ns3__updateM2(struct soap*, struct __ns3__updateM2 *, const char*, const char*);

#ifndef SOAP_TYPE___ns3__getSourceTest
#define SOAP_TYPE___ns3__getSourceTest (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__getSourceTest(struct soap*, struct __ns3__getSourceTest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__getSourceTest(struct soap*, const struct __ns3__getSourceTest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__getSourceTest(struct soap*, const char*, int, const struct __ns3__getSourceTest *, const char*);
SOAP_FMAC3 struct __ns3__getSourceTest * SOAP_FMAC4 soap_in___ns3__getSourceTest(struct soap*, const char*, struct __ns3__getSourceTest *, const char*);

#ifndef soap_write___ns3__getSourceTest
#define soap_write___ns3__getSourceTest(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__getSourceTest(soap, data), 0) || soap_put___ns3__getSourceTest(soap, data, "-ns3:getSourceTest", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__getSourceTest(struct soap*, const struct __ns3__getSourceTest *, const char*, const char*);

#ifndef soap_read___ns3__getSourceTest
#define soap_read___ns3__getSourceTest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__getSourceTest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__getSourceTest * SOAP_FMAC4 soap_get___ns3__getSourceTest(struct soap*, struct __ns3__getSourceTest *, const char*, const char*);

#ifndef SOAP_TYPE___ns3__getSource
#define SOAP_TYPE___ns3__getSource (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__getSource(struct soap*, struct __ns3__getSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__getSource(struct soap*, const struct __ns3__getSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__getSource(struct soap*, const char*, int, const struct __ns3__getSource *, const char*);
SOAP_FMAC3 struct __ns3__getSource * SOAP_FMAC4 soap_in___ns3__getSource(struct soap*, const char*, struct __ns3__getSource *, const char*);

#ifndef soap_write___ns3__getSource
#define soap_write___ns3__getSource(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__getSource(soap, data), 0) || soap_put___ns3__getSource(soap, data, "-ns3:getSource", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__getSource(struct soap*, const struct __ns3__getSource *, const char*, const char*);

#ifndef soap_read___ns3__getSource
#define soap_read___ns3__getSource(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__getSource(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__getSource * SOAP_FMAC4 soap_get___ns3__getSource(struct soap*, struct __ns3__getSource *, const char*, const char*);

#ifndef SOAP_TYPE___ns3__CheckSN
#define SOAP_TYPE___ns3__CheckSN (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__CheckSN(struct soap*, struct __ns3__CheckSN *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__CheckSN(struct soap*, const struct __ns3__CheckSN *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__CheckSN(struct soap*, const char*, int, const struct __ns3__CheckSN *, const char*);
SOAP_FMAC3 struct __ns3__CheckSN * SOAP_FMAC4 soap_in___ns3__CheckSN(struct soap*, const char*, struct __ns3__CheckSN *, const char*);

#ifndef soap_write___ns3__CheckSN
#define soap_write___ns3__CheckSN(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__CheckSN(soap, data), 0) || soap_put___ns3__CheckSN(soap, data, "-ns3:CheckSN", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__CheckSN(struct soap*, const struct __ns3__CheckSN *, const char*, const char*);

#ifndef soap_read___ns3__CheckSN
#define soap_read___ns3__CheckSN(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__CheckSN(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__CheckSN * SOAP_FMAC4 soap_get___ns3__CheckSN(struct soap*, struct __ns3__CheckSN *, const char*, const char*);

#ifndef SOAP_TYPE___ns3__CheckSNtest
#define SOAP_TYPE___ns3__CheckSNtest (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__CheckSNtest(struct soap*, struct __ns3__CheckSNtest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__CheckSNtest(struct soap*, const struct __ns3__CheckSNtest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__CheckSNtest(struct soap*, const char*, int, const struct __ns3__CheckSNtest *, const char*);
SOAP_FMAC3 struct __ns3__CheckSNtest * SOAP_FMAC4 soap_in___ns3__CheckSNtest(struct soap*, const char*, struct __ns3__CheckSNtest *, const char*);

#ifndef soap_write___ns3__CheckSNtest
#define soap_write___ns3__CheckSNtest(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__CheckSNtest(soap, data), 0) || soap_put___ns3__CheckSNtest(soap, data, "-ns3:CheckSNtest", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__CheckSNtest(struct soap*, const struct __ns3__CheckSNtest *, const char*, const char*);

#ifndef soap_read___ns3__CheckSNtest
#define soap_read___ns3__CheckSNtest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__CheckSNtest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__CheckSNtest * SOAP_FMAC4 soap_get___ns3__CheckSNtest(struct soap*, struct __ns3__CheckSNtest *, const char*, const char*);

#ifndef SOAP_TYPE___ns2__updateM2
#define SOAP_TYPE___ns2__updateM2 (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__updateM2(struct soap*, struct __ns2__updateM2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__updateM2(struct soap*, const struct __ns2__updateM2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__updateM2(struct soap*, const char*, int, const struct __ns2__updateM2 *, const char*);
SOAP_FMAC3 struct __ns2__updateM2 * SOAP_FMAC4 soap_in___ns2__updateM2(struct soap*, const char*, struct __ns2__updateM2 *, const char*);

#ifndef soap_write___ns2__updateM2
#define soap_write___ns2__updateM2(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__updateM2(soap, data), 0) || soap_put___ns2__updateM2(soap, data, "-ns2:updateM2", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__updateM2(struct soap*, const struct __ns2__updateM2 *, const char*, const char*);

#ifndef soap_read___ns2__updateM2
#define soap_read___ns2__updateM2(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__updateM2(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__updateM2 * SOAP_FMAC4 soap_get___ns2__updateM2(struct soap*, struct __ns2__updateM2 *, const char*, const char*);

#ifndef SOAP_TYPE___ns2__getSourceTest
#define SOAP_TYPE___ns2__getSourceTest (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__getSourceTest(struct soap*, struct __ns2__getSourceTest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__getSourceTest(struct soap*, const struct __ns2__getSourceTest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__getSourceTest(struct soap*, const char*, int, const struct __ns2__getSourceTest *, const char*);
SOAP_FMAC3 struct __ns2__getSourceTest * SOAP_FMAC4 soap_in___ns2__getSourceTest(struct soap*, const char*, struct __ns2__getSourceTest *, const char*);

#ifndef soap_write___ns2__getSourceTest
#define soap_write___ns2__getSourceTest(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__getSourceTest(soap, data), 0) || soap_put___ns2__getSourceTest(soap, data, "-ns2:getSourceTest", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__getSourceTest(struct soap*, const struct __ns2__getSourceTest *, const char*, const char*);

#ifndef soap_read___ns2__getSourceTest
#define soap_read___ns2__getSourceTest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__getSourceTest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__getSourceTest * SOAP_FMAC4 soap_get___ns2__getSourceTest(struct soap*, struct __ns2__getSourceTest *, const char*, const char*);

#ifndef SOAP_TYPE___ns2__getSource
#define SOAP_TYPE___ns2__getSource (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__getSource(struct soap*, struct __ns2__getSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__getSource(struct soap*, const struct __ns2__getSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__getSource(struct soap*, const char*, int, const struct __ns2__getSource *, const char*);
SOAP_FMAC3 struct __ns2__getSource * SOAP_FMAC4 soap_in___ns2__getSource(struct soap*, const char*, struct __ns2__getSource *, const char*);

#ifndef soap_write___ns2__getSource
#define soap_write___ns2__getSource(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__getSource(soap, data), 0) || soap_put___ns2__getSource(soap, data, "-ns2:getSource", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__getSource(struct soap*, const struct __ns2__getSource *, const char*, const char*);

#ifndef soap_read___ns2__getSource
#define soap_read___ns2__getSource(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__getSource(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__getSource * SOAP_FMAC4 soap_get___ns2__getSource(struct soap*, struct __ns2__getSource *, const char*, const char*);

#ifndef SOAP_TYPE___ns2__CheckSN
#define SOAP_TYPE___ns2__CheckSN (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CheckSN(struct soap*, struct __ns2__CheckSN *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CheckSN(struct soap*, const struct __ns2__CheckSN *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CheckSN(struct soap*, const char*, int, const struct __ns2__CheckSN *, const char*);
SOAP_FMAC3 struct __ns2__CheckSN * SOAP_FMAC4 soap_in___ns2__CheckSN(struct soap*, const char*, struct __ns2__CheckSN *, const char*);

#ifndef soap_write___ns2__CheckSN
#define soap_write___ns2__CheckSN(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__CheckSN(soap, data), 0) || soap_put___ns2__CheckSN(soap, data, "-ns2:CheckSN", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CheckSN(struct soap*, const struct __ns2__CheckSN *, const char*, const char*);

#ifndef soap_read___ns2__CheckSN
#define soap_read___ns2__CheckSN(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CheckSN(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__CheckSN * SOAP_FMAC4 soap_get___ns2__CheckSN(struct soap*, struct __ns2__CheckSN *, const char*, const char*);

#ifndef SOAP_TYPE___ns2__CheckSNtest
#define SOAP_TYPE___ns2__CheckSNtest (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CheckSNtest(struct soap*, struct __ns2__CheckSNtest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CheckSNtest(struct soap*, const struct __ns2__CheckSNtest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CheckSNtest(struct soap*, const char*, int, const struct __ns2__CheckSNtest *, const char*);
SOAP_FMAC3 struct __ns2__CheckSNtest * SOAP_FMAC4 soap_in___ns2__CheckSNtest(struct soap*, const char*, struct __ns2__CheckSNtest *, const char*);

#ifndef soap_write___ns2__CheckSNtest
#define soap_write___ns2__CheckSNtest(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns2__CheckSNtest(soap, data), 0) || soap_put___ns2__CheckSNtest(soap, data, "-ns2:CheckSNtest", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CheckSNtest(struct soap*, const struct __ns2__CheckSNtest *, const char*, const char*);

#ifndef soap_read___ns2__CheckSNtest
#define soap_read___ns2__CheckSNtest(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CheckSNtest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns2__CheckSNtest * SOAP_FMAC4 soap_get___ns2__CheckSNtest(struct soap*, struct __ns2__CheckSNtest *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__updateM2Response
#define SOAP_TYPE__ns1__updateM2Response (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__updateM2Response(struct soap*, struct _ns1__updateM2Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__updateM2Response(struct soap*, const struct _ns1__updateM2Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__updateM2Response(struct soap*, const char*, int, const struct _ns1__updateM2Response *, const char*);
SOAP_FMAC3 struct _ns1__updateM2Response * SOAP_FMAC4 soap_in__ns1__updateM2Response(struct soap*, const char*, struct _ns1__updateM2Response *, const char*);

#ifndef soap_write__ns1__updateM2Response
#define soap_write__ns1__updateM2Response(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__updateM2Response(soap, data), 0) || soap_put__ns1__updateM2Response(soap, data, "ns1:updateM2Response", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__updateM2Response(struct soap*, const struct _ns1__updateM2Response *, const char*, const char*);

#ifndef soap_read__ns1__updateM2Response
#define soap_read__ns1__updateM2Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__updateM2Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__updateM2Response * SOAP_FMAC4 soap_get__ns1__updateM2Response(struct soap*, struct _ns1__updateM2Response *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__updateM2
#define SOAP_TYPE__ns1__updateM2 (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__updateM2(struct soap*, struct _ns1__updateM2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__updateM2(struct soap*, const struct _ns1__updateM2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__updateM2(struct soap*, const char*, int, const struct _ns1__updateM2 *, const char*);
SOAP_FMAC3 struct _ns1__updateM2 * SOAP_FMAC4 soap_in__ns1__updateM2(struct soap*, const char*, struct _ns1__updateM2 *, const char*);

#ifndef soap_write__ns1__updateM2
#define soap_write__ns1__updateM2(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__updateM2(soap, data), 0) || soap_put__ns1__updateM2(soap, data, "ns1:updateM2", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__updateM2(struct soap*, const struct _ns1__updateM2 *, const char*, const char*);

#ifndef soap_read__ns1__updateM2
#define soap_read__ns1__updateM2(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__updateM2(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__updateM2 * SOAP_FMAC4 soap_get__ns1__updateM2(struct soap*, struct _ns1__updateM2 *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__getSourceTestResponse
#define SOAP_TYPE__ns1__getSourceTestResponse (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__getSourceTestResponse(struct soap*, struct _ns1__getSourceTestResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__getSourceTestResponse(struct soap*, const struct _ns1__getSourceTestResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getSourceTestResponse(struct soap*, const char*, int, const struct _ns1__getSourceTestResponse *, const char*);
SOAP_FMAC3 struct _ns1__getSourceTestResponse * SOAP_FMAC4 soap_in__ns1__getSourceTestResponse(struct soap*, const char*, struct _ns1__getSourceTestResponse *, const char*);

#ifndef soap_write__ns1__getSourceTestResponse
#define soap_write__ns1__getSourceTestResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__getSourceTestResponse(soap, data), 0) || soap_put__ns1__getSourceTestResponse(soap, data, "ns1:getSourceTestResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__getSourceTestResponse(struct soap*, const struct _ns1__getSourceTestResponse *, const char*, const char*);

#ifndef soap_read__ns1__getSourceTestResponse
#define soap_read__ns1__getSourceTestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getSourceTestResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSourceTestResponse * SOAP_FMAC4 soap_get__ns1__getSourceTestResponse(struct soap*, struct _ns1__getSourceTestResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__getSourceTest
#define SOAP_TYPE__ns1__getSourceTest (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__getSourceTest(struct soap*, struct _ns1__getSourceTest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__getSourceTest(struct soap*, const struct _ns1__getSourceTest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getSourceTest(struct soap*, const char*, int, const struct _ns1__getSourceTest *, const char*);
SOAP_FMAC3 struct _ns1__getSourceTest * SOAP_FMAC4 soap_in__ns1__getSourceTest(struct soap*, const char*, struct _ns1__getSourceTest *, const char*);

#ifndef soap_write__ns1__getSourceTest
#define soap_write__ns1__getSourceTest(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__getSourceTest(soap, data), 0) || soap_put__ns1__getSourceTest(soap, data, "ns1:getSourceTest", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__getSourceTest(struct soap*, const struct _ns1__getSourceTest *, const char*, const char*);

#ifndef soap_read__ns1__getSourceTest
#define soap_read__ns1__getSourceTest(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getSourceTest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSourceTest * SOAP_FMAC4 soap_get__ns1__getSourceTest(struct soap*, struct _ns1__getSourceTest *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__getSourceResponse
#define SOAP_TYPE__ns1__getSourceResponse (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__getSourceResponse(struct soap*, struct _ns1__getSourceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__getSourceResponse(struct soap*, const struct _ns1__getSourceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getSourceResponse(struct soap*, const char*, int, const struct _ns1__getSourceResponse *, const char*);
SOAP_FMAC3 struct _ns1__getSourceResponse * SOAP_FMAC4 soap_in__ns1__getSourceResponse(struct soap*, const char*, struct _ns1__getSourceResponse *, const char*);

#ifndef soap_write__ns1__getSourceResponse
#define soap_write__ns1__getSourceResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__getSourceResponse(soap, data), 0) || soap_put__ns1__getSourceResponse(soap, data, "ns1:getSourceResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__getSourceResponse(struct soap*, const struct _ns1__getSourceResponse *, const char*, const char*);

#ifndef soap_read__ns1__getSourceResponse
#define soap_read__ns1__getSourceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getSourceResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSourceResponse * SOAP_FMAC4 soap_get__ns1__getSourceResponse(struct soap*, struct _ns1__getSourceResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__getSource
#define SOAP_TYPE__ns1__getSource (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__getSource(struct soap*, struct _ns1__getSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__getSource(struct soap*, const struct _ns1__getSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getSource(struct soap*, const char*, int, const struct _ns1__getSource *, const char*);
SOAP_FMAC3 struct _ns1__getSource * SOAP_FMAC4 soap_in__ns1__getSource(struct soap*, const char*, struct _ns1__getSource *, const char*);

#ifndef soap_write__ns1__getSource
#define soap_write__ns1__getSource(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__getSource(soap, data), 0) || soap_put__ns1__getSource(soap, data, "ns1:getSource", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__getSource(struct soap*, const struct _ns1__getSource *, const char*, const char*);

#ifndef soap_read__ns1__getSource
#define soap_read__ns1__getSource(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getSource(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSource * SOAP_FMAC4 soap_get__ns1__getSource(struct soap*, struct _ns1__getSource *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__CheckSNResponse
#define SOAP_TYPE__ns1__CheckSNResponse (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__CheckSNResponse(struct soap*, struct _ns1__CheckSNResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__CheckSNResponse(struct soap*, const struct _ns1__CheckSNResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckSNResponse(struct soap*, const char*, int, const struct _ns1__CheckSNResponse *, const char*);
SOAP_FMAC3 struct _ns1__CheckSNResponse * SOAP_FMAC4 soap_in__ns1__CheckSNResponse(struct soap*, const char*, struct _ns1__CheckSNResponse *, const char*);

#ifndef soap_write__ns1__CheckSNResponse
#define soap_write__ns1__CheckSNResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__CheckSNResponse(soap, data), 0) || soap_put__ns1__CheckSNResponse(soap, data, "ns1:CheckSNResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__CheckSNResponse(struct soap*, const struct _ns1__CheckSNResponse *, const char*, const char*);

#ifndef soap_read__ns1__CheckSNResponse
#define soap_read__ns1__CheckSNResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckSNResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSNResponse * SOAP_FMAC4 soap_get__ns1__CheckSNResponse(struct soap*, struct _ns1__CheckSNResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__CheckSN
#define SOAP_TYPE__ns1__CheckSN (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__CheckSN(struct soap*, struct _ns1__CheckSN *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__CheckSN(struct soap*, const struct _ns1__CheckSN *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckSN(struct soap*, const char*, int, const struct _ns1__CheckSN *, const char*);
SOAP_FMAC3 struct _ns1__CheckSN * SOAP_FMAC4 soap_in__ns1__CheckSN(struct soap*, const char*, struct _ns1__CheckSN *, const char*);

#ifndef soap_write__ns1__CheckSN
#define soap_write__ns1__CheckSN(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__CheckSN(soap, data), 0) || soap_put__ns1__CheckSN(soap, data, "ns1:CheckSN", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__CheckSN(struct soap*, const struct _ns1__CheckSN *, const char*, const char*);

#ifndef soap_read__ns1__CheckSN
#define soap_read__ns1__CheckSN(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckSN(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSN * SOAP_FMAC4 soap_get__ns1__CheckSN(struct soap*, struct _ns1__CheckSN *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__CheckSNtestResponse
#define SOAP_TYPE__ns1__CheckSNtestResponse (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__CheckSNtestResponse(struct soap*, struct _ns1__CheckSNtestResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__CheckSNtestResponse(struct soap*, const struct _ns1__CheckSNtestResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckSNtestResponse(struct soap*, const char*, int, const struct _ns1__CheckSNtestResponse *, const char*);
SOAP_FMAC3 struct _ns1__CheckSNtestResponse * SOAP_FMAC4 soap_in__ns1__CheckSNtestResponse(struct soap*, const char*, struct _ns1__CheckSNtestResponse *, const char*);

#ifndef soap_write__ns1__CheckSNtestResponse
#define soap_write__ns1__CheckSNtestResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__CheckSNtestResponse(soap, data), 0) || soap_put__ns1__CheckSNtestResponse(soap, data, "ns1:CheckSNtestResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__CheckSNtestResponse(struct soap*, const struct _ns1__CheckSNtestResponse *, const char*, const char*);

#ifndef soap_read__ns1__CheckSNtestResponse
#define soap_read__ns1__CheckSNtestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckSNtestResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSNtestResponse * SOAP_FMAC4 soap_get__ns1__CheckSNtestResponse(struct soap*, struct _ns1__CheckSNtestResponse *, const char*, const char*);

#ifndef SOAP_TYPE__ns1__CheckSNtest
#define SOAP_TYPE__ns1__CheckSNtest (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__CheckSNtest(struct soap*, struct _ns1__CheckSNtest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__CheckSNtest(struct soap*, const struct _ns1__CheckSNtest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckSNtest(struct soap*, const char*, int, const struct _ns1__CheckSNtest *, const char*);
SOAP_FMAC3 struct _ns1__CheckSNtest * SOAP_FMAC4 soap_in__ns1__CheckSNtest(struct soap*, const char*, struct _ns1__CheckSNtest *, const char*);

#ifndef soap_write__ns1__CheckSNtest
#define soap_write__ns1__CheckSNtest(soap, data) ( soap_begin_send(soap) || (soap_serialize__ns1__CheckSNtest(soap, data), 0) || soap_put__ns1__CheckSNtest(soap, data, "ns1:CheckSNtest", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__CheckSNtest(struct soap*, const struct _ns1__CheckSNtest *, const char*, const char*);

#ifndef soap_read__ns1__CheckSNtest
#define soap_read__ns1__CheckSNtest(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckSNtest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSNtest * SOAP_FMAC4 soap_get__ns1__CheckSNtest(struct soap*, struct _ns1__CheckSNtest *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__updateM2Response
#define SOAP_TYPE_PointerTo_ns1__updateM2Response (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__updateM2Response(struct soap*, struct _ns1__updateM2Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__updateM2Response(struct soap*, const char *, int, struct _ns1__updateM2Response *const*, const char *);
SOAP_FMAC3 struct _ns1__updateM2Response ** SOAP_FMAC4 soap_in_PointerTo_ns1__updateM2Response(struct soap*, const char*, struct _ns1__updateM2Response **, const char*);

#ifndef soap_write_PointerTo_ns1__updateM2Response
#define soap_write_PointerTo_ns1__updateM2Response(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__updateM2Response(soap, data), 0) || soap_put_PointerTo_ns1__updateM2Response(soap, data, "ns1:updateM2Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__updateM2Response(struct soap*, struct _ns1__updateM2Response *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__updateM2Response
#define soap_read_PointerTo_ns1__updateM2Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__updateM2Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__updateM2Response ** SOAP_FMAC4 soap_get_PointerTo_ns1__updateM2Response(struct soap*, struct _ns1__updateM2Response **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__updateM2
#define SOAP_TYPE_PointerTo_ns1__updateM2 (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__updateM2(struct soap*, struct _ns1__updateM2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__updateM2(struct soap*, const char *, int, struct _ns1__updateM2 *const*, const char *);
SOAP_FMAC3 struct _ns1__updateM2 ** SOAP_FMAC4 soap_in_PointerTo_ns1__updateM2(struct soap*, const char*, struct _ns1__updateM2 **, const char*);

#ifndef soap_write_PointerTo_ns1__updateM2
#define soap_write_PointerTo_ns1__updateM2(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__updateM2(soap, data), 0) || soap_put_PointerTo_ns1__updateM2(soap, data, "ns1:updateM2", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__updateM2(struct soap*, struct _ns1__updateM2 *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__updateM2
#define soap_read_PointerTo_ns1__updateM2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__updateM2(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__updateM2 ** SOAP_FMAC4 soap_get_PointerTo_ns1__updateM2(struct soap*, struct _ns1__updateM2 **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getSourceTestResponse
#define SOAP_TYPE_PointerTo_ns1__getSourceTestResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getSourceTestResponse(struct soap*, struct _ns1__getSourceTestResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getSourceTestResponse(struct soap*, const char *, int, struct _ns1__getSourceTestResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__getSourceTestResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getSourceTestResponse(struct soap*, const char*, struct _ns1__getSourceTestResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getSourceTestResponse
#define soap_write_PointerTo_ns1__getSourceTestResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getSourceTestResponse(soap, data), 0) || soap_put_PointerTo_ns1__getSourceTestResponse(soap, data, "ns1:getSourceTestResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getSourceTestResponse(struct soap*, struct _ns1__getSourceTestResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getSourceTestResponse
#define soap_read_PointerTo_ns1__getSourceTestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getSourceTestResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSourceTestResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getSourceTestResponse(struct soap*, struct _ns1__getSourceTestResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getSourceTest
#define SOAP_TYPE_PointerTo_ns1__getSourceTest (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getSourceTest(struct soap*, struct _ns1__getSourceTest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getSourceTest(struct soap*, const char *, int, struct _ns1__getSourceTest *const*, const char *);
SOAP_FMAC3 struct _ns1__getSourceTest ** SOAP_FMAC4 soap_in_PointerTo_ns1__getSourceTest(struct soap*, const char*, struct _ns1__getSourceTest **, const char*);

#ifndef soap_write_PointerTo_ns1__getSourceTest
#define soap_write_PointerTo_ns1__getSourceTest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getSourceTest(soap, data), 0) || soap_put_PointerTo_ns1__getSourceTest(soap, data, "ns1:getSourceTest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getSourceTest(struct soap*, struct _ns1__getSourceTest *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getSourceTest
#define soap_read_PointerTo_ns1__getSourceTest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getSourceTest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSourceTest ** SOAP_FMAC4 soap_get_PointerTo_ns1__getSourceTest(struct soap*, struct _ns1__getSourceTest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getSourceResponse
#define SOAP_TYPE_PointerTo_ns1__getSourceResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getSourceResponse(struct soap*, struct _ns1__getSourceResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getSourceResponse(struct soap*, const char *, int, struct _ns1__getSourceResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__getSourceResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getSourceResponse(struct soap*, const char*, struct _ns1__getSourceResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getSourceResponse
#define soap_write_PointerTo_ns1__getSourceResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getSourceResponse(soap, data), 0) || soap_put_PointerTo_ns1__getSourceResponse(soap, data, "ns1:getSourceResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getSourceResponse(struct soap*, struct _ns1__getSourceResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getSourceResponse
#define soap_read_PointerTo_ns1__getSourceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getSourceResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSourceResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getSourceResponse(struct soap*, struct _ns1__getSourceResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getSource
#define SOAP_TYPE_PointerTo_ns1__getSource (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getSource(struct soap*, struct _ns1__getSource *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getSource(struct soap*, const char *, int, struct _ns1__getSource *const*, const char *);
SOAP_FMAC3 struct _ns1__getSource ** SOAP_FMAC4 soap_in_PointerTo_ns1__getSource(struct soap*, const char*, struct _ns1__getSource **, const char*);

#ifndef soap_write_PointerTo_ns1__getSource
#define soap_write_PointerTo_ns1__getSource(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getSource(soap, data), 0) || soap_put_PointerTo_ns1__getSource(soap, data, "ns1:getSource", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getSource(struct soap*, struct _ns1__getSource *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getSource
#define soap_read_PointerTo_ns1__getSource(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getSource(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__getSource ** SOAP_FMAC4 soap_get_PointerTo_ns1__getSource(struct soap*, struct _ns1__getSource **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckSNResponse
#define SOAP_TYPE_PointerTo_ns1__CheckSNResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckSNResponse(struct soap*, struct _ns1__CheckSNResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckSNResponse(struct soap*, const char *, int, struct _ns1__CheckSNResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__CheckSNResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckSNResponse(struct soap*, const char*, struct _ns1__CheckSNResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckSNResponse
#define soap_write_PointerTo_ns1__CheckSNResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckSNResponse(soap, data), 0) || soap_put_PointerTo_ns1__CheckSNResponse(soap, data, "ns1:CheckSNResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckSNResponse(struct soap*, struct _ns1__CheckSNResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckSNResponse
#define soap_read_PointerTo_ns1__CheckSNResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckSNResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSNResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckSNResponse(struct soap*, struct _ns1__CheckSNResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckSN
#define SOAP_TYPE_PointerTo_ns1__CheckSN (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckSN(struct soap*, struct _ns1__CheckSN *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckSN(struct soap*, const char *, int, struct _ns1__CheckSN *const*, const char *);
SOAP_FMAC3 struct _ns1__CheckSN ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckSN(struct soap*, const char*, struct _ns1__CheckSN **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckSN
#define soap_write_PointerTo_ns1__CheckSN(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckSN(soap, data), 0) || soap_put_PointerTo_ns1__CheckSN(soap, data, "ns1:CheckSN", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckSN(struct soap*, struct _ns1__CheckSN *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckSN
#define soap_read_PointerTo_ns1__CheckSN(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckSN(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSN ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckSN(struct soap*, struct _ns1__CheckSN **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckSNtestResponse
#define SOAP_TYPE_PointerTo_ns1__CheckSNtestResponse (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckSNtestResponse(struct soap*, struct _ns1__CheckSNtestResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckSNtestResponse(struct soap*, const char *, int, struct _ns1__CheckSNtestResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__CheckSNtestResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckSNtestResponse(struct soap*, const char*, struct _ns1__CheckSNtestResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckSNtestResponse
#define soap_write_PointerTo_ns1__CheckSNtestResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckSNtestResponse(soap, data), 0) || soap_put_PointerTo_ns1__CheckSNtestResponse(soap, data, "ns1:CheckSNtestResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckSNtestResponse(struct soap*, struct _ns1__CheckSNtestResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckSNtestResponse
#define soap_read_PointerTo_ns1__CheckSNtestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckSNtestResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSNtestResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckSNtestResponse(struct soap*, struct _ns1__CheckSNtestResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckSNtest
#define SOAP_TYPE_PointerTo_ns1__CheckSNtest (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckSNtest(struct soap*, struct _ns1__CheckSNtest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckSNtest(struct soap*, const char *, int, struct _ns1__CheckSNtest *const*, const char *);
SOAP_FMAC3 struct _ns1__CheckSNtest ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckSNtest(struct soap*, const char*, struct _ns1__CheckSNtest **, const char*);

#ifndef soap_write_PointerTo_ns1__CheckSNtest
#define soap_write_PointerTo_ns1__CheckSNtest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckSNtest(soap, data), 0) || soap_put_PointerTo_ns1__CheckSNtest(soap, data, "ns1:CheckSNtest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckSNtest(struct soap*, struct _ns1__CheckSNtest *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CheckSNtest
#define soap_read_PointerTo_ns1__CheckSNtest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckSNtest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _ns1__CheckSNtest ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckSNtest(struct soap*, struct _ns1__CheckSNtest **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
